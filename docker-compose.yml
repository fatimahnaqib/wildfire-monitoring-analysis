version: '3.8'

services:
  # -------------------------------
  # PostgreSQL for Airflow & Wildfire DB
  # -------------------------------
  postgres:
    image: postgres:14
    container_name: wildfire_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init/init.sql:/docker-entrypoint-initdb.d/init.sql

  # -------------------------------
  # Zookeeper (for Kafka)
  # -------------------------------
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: wildfire_zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  # -------------------------------
  # Kafka Consumer
  #--------------------------------
  kafka_consumer:
    build: ./kafka_consumer
    depends_on:
      - kafka
      - zookeeper
      - postgres
    restart: always

  # -------------------------------
  # Kafka (Bitnami)
  # -------------------------------
  kafka:
    image: bitnami/kafka:latest
    container_name: wildfire_kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@wildfire_kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - postgres

  # -------------------------------
  # Apache Airflow Webserver
  # -------------------------------
  airflow-webserver:
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    container_name: airflow_webserver
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflowdb
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - PYTHONPATH=/opt/airflow  
    volumes:
      - ./airflow:/opt/airflow
      - ./airflow/requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    command: webserver

  # -------------------------------
  # Apache Airflow Scheduler
  # -------------------------------
  airflow-scheduler:
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    container_name: airflow_scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflowdb
      - PYTHONPATH=/opt/airflow  
    volumes:
      - ./airflow:/opt/airflow
      - ./airflow/requirements.txt:/requirements.txt
    command: scheduler

  # -------------------------------
  # Apache Airflow Init
  # -------------------------------
  airflow-init:
    build:
      context: .
      dockerfile: ./airflow/Dockerfile
    depends_on:
      - postgres
    volumes:
      - ./airflow:/opt/airflow
      - ./airflow/requirements.txt:/requirements.txt
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflowdb
      - PYTHONPATH=/opt/airflow  
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username admin --firstname admin --lastname admin --role Admin --email admin@example.com --password admin"

volumes:
  postgres_data:
  kafka_data:
